import logging
from aiogram import Bot, Dispatcher, executor, types
import markups as nav
from wiki_func import wiki_funk

from data_base import write_data, write_message_from_users
from config import TOKEN


'''–Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–µ–¥–µ–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞'''
logging.basicConfig(level=logging.INFO)


'''–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞'''
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)


'''–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ (—Å–æ–æ–±—â–µ–Ω–∏–π)'''
@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    write_data(message.chat["id"], message.chat["first_name"])
    write_message_from_users(message.chat["first_name"], message.chat["id"], message.text)
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.chat["first_name"]}!', reply_markup=nav.main_menu)


@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    write_message_from_users(message.chat["first_name"], message.chat["id"], message.text)
    await message.answer('–∑–¥–µ—Å—å –ø–æ–∫–∞ –ø—É—Å—Ç–æ')


@dp.message_handler(commands=['game'])
async def process_game_command(message: types.Message):
    write_message_from_users(message.chat["first_name"], message.chat["id"], message.text)
    await message.answer('—ç—Ç–∞ –∏–≥—Ä–∞ –ø–æ–∫–∞ –ø—É—Å—Ç–∞')


@dp.message_handler()
async def all_buttons(message: types.Message):

    write_message_from_users(message.chat["first_name"], message.chat["id"], message.text)

    if message.text == 'info about you ‚ùóÔ∏è':
        await bot.send_message(message.from_user.id, f'–í–∞—à–µ –∏–º—è -- {message.chat["first_name"]}\n–í–∞—à–µ –ø—Ä–æ–∑–≤–∏—â–µ -- {message.chat["username"]}\n–í–∞—à id -- {message.chat["id"]}')
    elif message.text == '-–¥—Ä—É–≥–æ–µ-':
        await bot.send_message(message.from_user.id,'–í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ –∫–Ω–æ–ø–∫–µ -–¥—Ä—É–≥–æ–µ-' , reply_markup=nav.menu_other)
    elif message.text == '–¥—Ä—É–≥–æ–µ 1 ‚ôêÔ∏è':
        await bot.send_message(message.from_user.id, '–≤—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –î–†–£–ì–û–ï_1, –∫ –Ω–µ–π –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª üëª‚úçÔ∏èüëÖ')
    elif message.text == '–¥—Ä—É–≥–æ–µ 2 ‚ôêÔ∏è':
        await bot.send_message(message.from_user.id, '–≤—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –î–†–£–ì–û–ï_2, –∫ –Ω–µ–π –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª üôÖ‚Äç‚ôÇÔ∏èüôÜü§∑‚Äç‚ôÇÔ∏è')
    elif message.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üÜô':
        await bot.send_message(message.from_user.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –Ω–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=nav.main_menu)


@dp.message_handler(commands=['wiki'])
async def process_wiki_command(message: types.Message):
    write_message_from_users(message.chat["first_name"], message.chat["id"], message.text)
    await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –ª—é–±–æ–µ —Å–ª–æ–≤–æ, –∏ —è –Ω–∞–π–¥—É –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ Wikipedia')
    
@dp.message_handler(content_types=["text"])
async def handle_text(message: types.Message):
    await message.answer(wiki_funk(message.text))


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
